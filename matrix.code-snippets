{
	"matrix": {
  "prefix": "matrix",
  "body": [
    "struct matrix{",
    "    int n,m; ",
    "    vvi a;",
    "",
    "    matrix(int n,int m,vvi A){",
    "        this->n = n;",
    "        this->m = m;",
    "        a.resize(n, vector<int>(m, 0));",
    "        for(int i = 0; i < n; i ++){",
    "            for(int j = 0; j < m; j++){",
    "                this -> a[i][j] = A[i][j];",
    "            }",
    "        }",
    "    }",
    "",
    "    matrix friend operator*(matrix a,matrix b){",
    "        matrix c(a.n, b.m, vvi(a.n, vector<int>(b.m, 0)));",
    "        for(int i = 0; i < a.n; i++){",
    "            for(int j = 0; j < b.m; j++){",
    "                for(int k = 0; k < a.m; k++){",
    "                    c.a[i][j] = (c.a[i][j] + a.a[i][k] * b.a[k][j]) % N;",
    "                }",
    "            }",
    "        }",
    "        return c;",
    "    }",
    "",
    "};",
    "",
    "matrix matpow(matrix m, int n){",
    "    matrix res(m.n, m.m, m.a);",
    "",
    "    while(n>0){",
    "        if(n & 1){",
    "            res = res * m;",
    "        }",
    "        m = m * m;",
    "        n >>= 1;",
    "    }",
    "",
    "    return res;",
    "}",
    "void print(matrix a){",
    "    for(int i = 0; i < a.n; i++){",
    "        for(int j = 0; j < a.m; j++){",
    "            cout << a.a[i][j] << \" \";",
    "        }",
    "        cout << endl;",
    "    }",
    "",
    "}",
    ""
  ],
  "description": "matrix"
}
}